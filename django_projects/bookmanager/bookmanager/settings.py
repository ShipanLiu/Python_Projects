"""
Django settings for bookmanager project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
# __file__ 就是 指 当前文件自身， 也就是 settings.py
# print(os.path.abspath(__file__)) : E:\Z_Frond_Back_workplace\07_Python\django_projects\bookmanager\bookmanager\settings.py
# print(os.path.dirname(os.path.abspath(__file__)))  :  E:\Z_Frond_Back_workplace\07_Python\django_projects\bookmanager\bookmanager
# print(os.path.dirname(os.path.dirname(os.path.abspath(__file__)))) : E:\Z_Frond_Back_workplace\07_Python\django_projects\bookmanager

#BASE_DIR 就是 这个项目的 目录
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '=nslec3)@+mmjcpm0$-c9$!b9v(_tib!a-2sax4qfs5mj3pt09'

# SECURITY WARNING: don't run with debug turned on in production!
# 这个项目的 启动模式， 设置成false： 上线模式
# True： 检测代码改动之后， 立刻重启 服务； 返回报错页面
DEBUG = True


# 允许谁去请求
ALLOWED_HOSTS = []


# Application definition
# 当前项目中 安装的 用用列表
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    #自己  python manage.py startapp music  我创建了一个 music 的 App， 在这里注册一下
    'music'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 用来防止 csfr 攻击的
    #'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# 主路由的 地址
ROOT_URLCONF = 'bookmanager.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # E:\Z_Frond_Back_workplace\07_Python\django_projects\bookmanager\templates
        'DIRS': [os.path.join(BASE_DIR, "templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'bookmanager.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases
# 数据库
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/
# 这里管 静态文件

STATIC_URL = '/static/'

#  a new tuple for finding the FILES
#  一个元素的元组 必须是有 ，的
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static"),
)
